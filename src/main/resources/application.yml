server:
  port: 8081
spring:
  kafka:
#    bootstrap-servers: pkc-ymrq7.us-east-2.aws.confluent.cloud:9092
    properties:
      sasl:
#        mechanism: PLAIN
#        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='TWLDNAIWYVSTZ4HP' password='CEhJa+SaP2/v5ismJfK1JhtQzFp7Y4vP3D/Qypwd9Cp4J0iLIj0cLvaD/LeljnqZ';
      security:
#        protocol: SASL_SSL
      session.timeout.ms: 45000
    client-id: ecommerce-orders-streams
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 2
      auto-offset-reset: earliest
    streams:
      replication-factor: 3
      application-id: java-kafka-streams
      properties:
        auto:
          create:
            topics:
              enable: true
        "auto.create.topics.enable": true

topic:
  streams-in: ${topic.duplicate.out}
  streams-in2: ecommerce-orders-kafka-streams-in-2
  streams-out: ecommerce-orders-kafka-streams-out
  duplicate:
    in: ecommerce-orders
    out: ecommerce-orders-duplicate